AP_CORE_DECLARE() < at server/util_mutex.c:500>:
    apr_palloc()
    create_empty_config() <ap_conf_vector_t *create_empty_config (apr_pool_t *p) at server/config.c:256>:
        apr_pcalloc()
    ap_run_insert_filter()
    invoke_filter_init() <int invoke_filter_init (request_rec *r, ap_filter_t *filters) at server/config.c:357>:
        filter_init_func()
    ap_strchr_c()
    apr_pmemdup()
    ap_run_handler()
    ap_log_rerror()
    APLOGNO()
    ap_is_HTTP_VALID_RESPONSE()
    apr_table_get()
    ap_find_command()
    ap_get_module_config()
    ap_set_module_config()
    apr_pstrdup()
    ap_make_full_path()
    ap_getword_conf()
    ap_pcfg_openfile()
    ap_create_per_dir_config()
    ap_build_config()
    ap_walk_config()
    ap_cfg_closefile()
    APR_STATUS_IS_ENOENT()
    APR_STATUS_IS_ENOTDIR()
    apr_table_setn()
    apr_pcalloc()
    apr_array_make()
    ap_parse_vhost_addrs() <const char *ap_parse_vhost_addrs (apr_pool_t *p, const char *hostname, server_rec *s) at server/vhost.c:224>:
        err() <void err (const char *s) at support/ab.c:371>:
        get_addresses() <const char *get_addresses (apr_pool_t *p, const char *w_, server_addr_rec ***paddr, apr_port_t default_port) at server/vhost.c:146>:
            apr_pstrmemdup()
            apr_parse_addr_port()
            apr_sockaddr_info_get()
            ap_log_error()
            APLOGNO()
            apr_pcalloc()
        ap_getword_conf()
    ap_hook_pre_config()
    conf_vector_length_pre_config() <int conf_vector_length_pre_config (apr_pool_t *pconf, apr_pool_t *plog, apr_pool_t *ptemp) at server/config.c:2306>:
        apr_pool_cleanup_register()
        reset_conf_vector_length() <apr_status_t reset_conf_vector_length (void *dummy) at server/config.c:2299>:
    ap_update_vhost_given_ip()
    ap_run_pre_connection()
    ap_run_process_connection()
    ap_get_core_module_config()
    apr_array_push()
    APR_ARRAY_IDX()
    apr_random_insecure_bytes()
    apr_random_standard_new()
    apr_generate_random_bytes()
    apr_random_add_entropy()
    apr_random_insecure_ready()
    ap_log_error()
    apr_uri_parse_hostinfo()
    apr_uri_parse()
    ap_http_scheme()
    apr_hash_get()
    apr_hash_first()
    apr_hash_next()
    apr_hash_this()
    mxcfg_lookup() <mutex_cfg_t *mxcfg_lookup (apr_pool_t *p, const char *type) at server/util_mutex.c:318>:
        apr_hash_get()
        mutex_needs_file() <int mutex_needs_file (apr_lockmech_e mech) at server/util_mutex.c:278>:
        apr_pmemdup()
    apr_file_printf()
    ap_assert()
    ap_server_root_relative()
main() <int main_htpasswd (int argc, const char *const argv[]) at support/htpasswd.c:439>:
    apr_app_initialize()
    terminate() <void terminate (void) at support/htpasswd.c:316>:
        apr_terminate()
        pressanykey()
        terminate() <void terminate (void) at support/htpasswd.c:267> (recursive: see 97)
    check_args() <void check_args (apr_pool_t *pool, int argc, const char *const argv[], int *alg, int *mask, char **user, char **pwfilename, char **password) at support/htpasswd.c:324>:
        usage() <void usage (void) at support/htpasswd.c:259>:
            apr_file_printf()
        apr_file_printf()
        apr_pstrdup()
    exists() <int exists (char *fname, apr_pool_t *pool) at support/htpasswd.c:307>:
        apr_stat()
    accessible() <int accessible (apr_pool_t *pool, char *fname, int mode) at support/htpasswd.c:293>:
        apr_file_open()
        apr_file_close()
    mkrecord() <int mkrecord (char *user, char *record, apr_size_t rlen, char *passwd, int alg) at support/htpasswd.c:168>:
        apr_password_get()
        seed_rand() <apr_status_t seed_rand (void) at support/htpasswd.c:137>:
            apr_generate_random_bytes()
            apr_file_printf()
        generate_salt() <void generate_salt (char *s, size_t size) at support/htpasswd.c:126>:
        apr_md5_encode()
        to64() <void to64 (char *s, unsigned long v, int n) at support/htpasswd.c:114>:
        apr_file_printf()
    apr_temp_dir_get()
    apr_psprintf()
    putline() <void putline (apr_file_t *f, const char *l) at support/htpasswd.c:150>:
        apr_file_puts()
        apr_strerror()
        apr_file_printf()
        apr_file_close()
    apr_file_close()
    apr_file_copy()
